{"version":3,"sources":["meteor://ðŸ’»app/imports/api/chats.js","meteor://ðŸ’»app/imports/api/messages.js","meteor://ðŸ’»app/server/main.js"],"names":["module","export","Chats","Meteor","importSync","v","Mongo","_","Collection","isServer","methods","insert","createdAt","Date","userAgent","headers","get","errors","packages","_id","step","update","$set","sessionContext","error","$push","Messages","check","HTTP","apiai","require","motionAiRequest","msg","session","callback","params","bot","key","result","API_AI_CLIENT_ACCESS_TOKEN","settings","apiAiClientAccessToken","api","text","chatId","user","intent","response","console","log","data","botResponse","split","map","call","responsePart","options","sessionId","request","textRequest","on","bindEnvironment","fulfillment","speech","metadata","intentName","end","messageId"],"mappings":";;;;;;;;AAAAA,OAAOC,MAAP,CAAc;AAACC,SAAM,YAAU;AAAC,WAAOA,KAAP;AAAa;AAA/B,CAAd;AAAgD,IAAIC,eAAJ;AAAWH,OAAOI,UAAP,CAAkB,eAAlB,EAAkC;AAAC,YAAS,UAASC,CAAT,EAAW;AAACF,aAAOE,CAAP;AAAS;AAA/B,CAAlC,EAAmE,CAAnE;AAAsE,IAAIC,cAAJ;AAAUN,OAAOI,UAAP,CAAkB,cAAlB,EAAiC;AAAC,WAAQ,UAASC,CAAT,EAAW;AAACC,YAAMD,CAAN;AAAQ;AAA7B,CAAjC,EAAgE,CAAhE;;AAAmE,IAAIE,UAAJ;;AAAMP,OAAOI,UAAP,CAAkB,QAAlB,EAA2B;AAAC,OAAI,UAASC,CAAT,EAAW;AAACE,QAAEF,CAAF;AAAI;AAArB,CAA3B,EAAkD,CAAlD;AAI7M,IAAMH,QAAQ,IAAII,MAAME,UAAV,CAAqB,MAArB,CAAd;;AAEP,IAAIL,OAAOM,QAAX,EAAqB;AAEnBN,SAAOO,OAAP,CAAe;AACb,kBADa,cACI;AACf,aAAOR,MAAMS,MAAN,CAAa;AAClBC,mBAAW,IAAIC,IAAJ,EADO;AAElBC,mBAAWC,QAAQC,GAAR,CAAY,IAAZ,EAAkB,YAAlB,CAFO;AAGlBC,gBAAQ,EAHU;AAIlBC,kBAAU;AAJQ,OAAb,CAAP;AAMD,KARY;AAUb,sBAVa,YAUOC,GAVP,EAUYC,IAVZ,EAUkB;AAC7B,aAAOlB,MAAMmB,MAAN,CAAaF,GAAb,EAAkB;AAACG,cAAM;AAACF,gBAAMA;AAAP;AAAP,OAAlB,CAAP;AACD,KAZY;AAcb,gCAda,YAciBD,GAdjB,EAcsBI,cAdtB,EAcsC;AACjD,aAAOrB,MAAMmB,MAAN,CAAaF,GAAb,EAAkB;AAACG,cAAM;AAACC,0BAAgBA;AAAjB;AAAP,OAAlB,CAAP;AACD,KAhBY;AAkBb,uBAlBa,YAkBQJ,GAlBR,EAkBaK,KAlBb,EAkBoB;AAC/B,aAAOtB,MAAMmB,MAAN,CAAaF,GAAb,EAAkB;AAAEM,eAAO;AAAER,kBAAQO;AAAV;AAAT,OAAlB,CAAP;AACD;AApBY,GAAf;AAsBD,qG;;;;;;;;;;;AC9BDxB,OAAOC,MAAP,CAAc;AAACyB,cAAS,YAAU;AAAC,eAAOA,QAAP;AAAgB;AAArC,CAAd;AAAsD,IAAIvB,eAAJ;AAAWH,OAAOI,UAAP,CAAkB,eAAlB,EAAkC;AAAC,cAAS,UAASC,CAAT,EAAW;AAACF,iBAAOE,CAAP;AAAS;AAA/B,CAAlC,EAAmE,CAAnE;AAAsE,IAAIC,cAAJ;AAAUN,OAAOI,UAAP,CAAkB,cAAlB,EAAiC;AAAC,aAAQ,UAASC,CAAT,EAAW;AAACC,gBAAMD,CAAN;AAAQ;AAA7B,CAAjC,EAAgE,CAAhE;AAAmE,IAAIsB,cAAJ;AAAU3B,OAAOI,UAAP,CAAkB,cAAlB,EAAiC;AAAC,aAAQ,UAASC,CAAT,EAAW;AAACsB,gBAAMtB,CAAN;AAAQ;AAA7B,CAAjC,EAAgE,CAAhE;AAAmE,IAAIuB,aAAJ;AAAS5B,OAAOI,UAAP,CAAkB,aAAlB,EAAgC;AAAC,YAAO,UAASC,CAAT,EAAW;AAACuB,eAAKvB,CAAL;AAAO;AAA3B,CAAhC,EAA6D,CAA7D;;AAI1S,IAAMwB,QAAQC,QAAQ,OAAR,CAAd;;AAIA,IAAMC,kBAAkB,UAAUC,GAAV,EAAeC,OAAf,EAAwBC,QAAxB,EAAkC;AACtDN,SAAKZ,GAAL,CAAS,kCAAT,EAA6C;AACzCmB,gBAAQ;AACJH,iBAAKA,GADD;AAEJC,qBAASA,OAFL;AAGJG,iBAAK,KAHD;AAIJC,iBAAK;AAJD;AADiC,KAA7C,EAOG,UAACb,KAAD,EAAQc,MAAR,EAAmB;AAClBJ,iBAASV,KAAT,EAAgBc,MAAhB;AACH,KATD;AAUH,CAXD;;AAaO,IAAMZ,WAAW,IAAIpB,MAAME,UAAV,CAAqB,SAArB,CAAjB;;AAEP,IAAIL,OAAOM,QAAX,EAAqB;AACjB,QAAM8B,6BAA6BpC,OAAOqC,QAAP,CAAgBC,sBAAnD,CADiB,CAC0D;;AAC3E,QAAMC,MAAMb,MAAMU,0BAAN,CAAZ;AACApC,WAAOO,OAAP,CAAe;AACX,yBADW,YACOiC,IADP,EACaC,MADb,EACqBC,IADrB,EAC2BC,MAD3B,EACmC;AAC1CpB,qBAASf,MAAT,CAAgB;AACZgC,0BADY;AAEZC,8BAFY;AAGZE,wBAAQA,MAHI;AAIZD,sBAAMA,IAJM;AAKZjC,2BAAW,IAAIC,IAAJ;AALC,aAAhB;AAOH,SATU;AAUX,+BAVW,YAUa8B,IAVb,EAUmBC,MAVnB,EAU2B;AAClCb,4BAAgBY,IAAhB,EAAsBC,MAAtB,EAA8B,UAACpB,KAAD,EAAQuB,QAAR,EAAqB;AAC/C,oBAAIvB,KAAJ,EAAW;AACPwB,4BAAQC,GAAR,CAAYzB,KAAZ;AACA;AACH;;AAEDuB,yBAASG,IAAT,CAAcC,WAAd,CAA0BC,KAA1B,CAAgC,UAAhC,EAA4CC,GAA5C,CAAgD,wBAAgB;AAC5DlD,2BAAOmD,IAAP,CAAY,iBAAZ,EAA+BC,YAA/B,EAA6CX,MAA7C,EAAqD,KAArD,EAA4DG,SAASG,IAArE;AACH,iBAFD;AAKH,aAXD;AAYH,SAvBU;AAwBX,4BAxBW,YAwBUP,IAxBV,EAwBgBC,MAxBhB,EAwBwB;AAC/B,gBAAIY,UAAU;AACVC,2BAAWb;AADD,aAAd;AAGA,gBAAIc,UAAUhB,IAAIiB,WAAJ,CAAgBhB,IAAhB,EAAsBa,OAAtB,CAAd;AAEAE,oBAAQE,EAAR,CAAW,UAAX,EAAuBzD,OAAO0D,eAAP,CAAuB,UAAUd,QAAV,EAAoB;AAC9DC,wBAAQC,GAAR,CAAYF,QAAZ;AACA5C,uBAAOmD,IAAP,CAAY,iBAAZ,EAA+BP,SAAST,MAAT,CAAgBwB,WAAhB,CAA4BC,MAA3D,EAAmEnB,MAAnE,EAA2E,KAA3E,EAAkFG,SAAST,MAAT,CAAgB0B,QAAhB,CAAyBC,UAA3G;AAEH,aAJsB,EAIpB,UAAUzC,KAAV,EAAiB;AAChBwB,wBAAQC,GAAR,CAAYzB,KAAZ;AACH,aANsB,CAAvB;AAQAkC,oBAAQQ,GAAR;AACH,SAvCU;AAwCX,yBAxCW,YAwCOC,SAxCP,EAwCkB,CACzB;AACH;AA1CU,KAAf;AA4CH,qG;;;;;;;;;;;ACtEDnE,OAAOI,UAAP,CAAkB,4BAAlB;AAAgDJ,OAAOI,UAAP,CAAkB,yBAAlB,yD","file":"/app.js","sourcesContent":["import { Meteor } from 'meteor/meteor';\r\nimport { Mongo } from 'meteor/mongo';\r\nimport { _ } from 'lodash';\r\n\r\nexport const Chats = new Mongo.Collection('chat');\r\n\r\nif (Meteor.isServer) {\r\n\r\n  Meteor.methods({\r\n    'chats.insert'() {\r\n      return Chats.insert({\r\n        createdAt: new Date(),\r\n        userAgent: headers.get(this, 'User-Agent'),\r\n        errors: [],\r\n        packages: [],\r\n      });\r\n    },\r\n\r\n    'chats.updateStep' (_id, step) {\r\n      return Chats.update(_id, {$set: {step: step}});\r\n    },\r\n\r\n    'chats.updateSessionContext' (_id, sessionContext) {\r\n      return Chats.update(_id, {$set: {sessionContext: sessionContext}});\r\n    },\r\n\r\n    'chats.appendError' (_id, error) {\r\n      return Chats.update(_id, { $push: { errors: error } });\r\n    }\r\n  });\r\n}\r\n","import {Meteor} from 'meteor/meteor';\r\nimport {Mongo} from 'meteor/mongo';\r\nimport {check} from 'meteor/check';\r\nimport {HTTP} from 'meteor/http';\r\nconst apiai = require('apiai');\r\n\r\n\r\n\r\nconst motionAiRequest = function (msg, session, callback) {\r\n    HTTP.get('https://api.motion.ai/messageBot', {\r\n        params: {\r\n            msg: msg,\r\n            session: session,\r\n            bot: 39872,\r\n            key: '41dbde35b62de513f017bb2c3b0c0ce4',\r\n        },\r\n    }, (error, result) => {\r\n        callback(error, result);\r\n    });\r\n};\r\n\r\nexport const Messages = new Mongo.Collection('message');\r\n\r\nif (Meteor.isServer) {\r\n    const API_AI_CLIENT_ACCESS_TOKEN = Meteor.settings.apiAiClientAccessToken; // your api key\r\n    const api = apiai(API_AI_CLIENT_ACCESS_TOKEN);\r\n    Meteor.methods({\r\n        'messages.insert'(text, chatId, user, intent) {\r\n            Messages.insert({\r\n                text,\r\n                chatId,\r\n                intent: intent,\r\n                user: user,\r\n                createdAt: new Date()\r\n            });\r\n        },\r\n        'messages.callMotionAi'(text, chatId) {\r\n            motionAiRequest(text, chatId, (error, response) => {\r\n                if (error) {\r\n                    console.log(error);\r\n                    return;\r\n                }\r\n\r\n                response.data.botResponse.split(\"::next::\").map(responsePart => {\r\n                    Meteor.call('messages.insert', responsePart, chatId, 'bot', response.data);\r\n                });\r\n\r\n\r\n            });\r\n        },\r\n        'messages.callApiAi'(text, chatId) {\r\n            let options = {\r\n                sessionId: chatId\r\n            };\r\n            let request = api.textRequest(text, options);\r\n\r\n            request.on('response', Meteor.bindEnvironment(function (response) {\r\n                console.log(response);\r\n                Meteor.call('messages.insert', response.result.fulfillment.speech, chatId, 'bot', response.result.metadata.intentName);\r\n\r\n            }, function (error) {\r\n                console.log(error);\r\n            }));\r\n\r\n            request.end();\r\n        },\r\n        'messages.remove'(messageId) {\r\n            //NOOP\r\n        }\r\n    });\r\n}\r\n","import '../imports/api/messages.js';\r\nimport '../imports/api/chats.js';\r\n"]}